plugins {
    id 'java'
    id 'scala'
    id 'com.github.maiflai.scalatest' version '0.32'
}

group 'com.github.maizy'
version '0.1-SNAPSHOT'
sourceCompatibility = 11

ext {
    scalaMajorVersion = '2.12'
    scalaMinorVersion = '15'
    scalaVersion = "${scalaMajorVersion}.${scalaMinorVersion}"

    nativeLibsDir = "$buildDir/libs/natives"
}


allprojects {
    apply plugin: 'java'
    apply plugin: 'scala'

    repositories {
        mavenCentral()
    }

    configurations {
        nativeBundle
    }

    dependencies {
        implementation "org.scala-lang:scala-library:${scalaVersion}"
        implementation "org.scala-lang:scala-reflect:${scalaVersion}"

        testImplementation "org.scalatest:scalatest_${scalaMajorVersion}:3.2.11"
    }

    task extractNativeBundle(type: Sync) {
        from {
            configurations.nativeBundle.collect { zipTree(it) }
        }
        into file(project.nativeLibsDir)
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = [
                '-Xlint:_',
                '-feature',
                '-Xfatal-warnings',
                '-Ypartial-unification',
                '-Ywarn-dead-code',
                '-Ywarn-inaccessible',
                '-Ywarn-infer-any',
                '-Ywarn-nullary-override',
                '-Ywarn-nullary-unit',
                '-Ywarn-numeric-widen'
        ]
    }
}

project('trbrk') {
    apply plugin: 'application'

    application {
        mainClass = 'com.github.maizy.trbrk.app.Main'
        applicationDefaultJvmArgs = ["-Djava.library.path=${project.nativeLibsDir}"]
    }

    dependencies {
        implementation 'net.java.jinput:jinput:2.0.9'
        nativeBundle 'net.java.jinput:jinput:2.0.9:natives-all'

        implementation files('libs/de.ralleytn.wrapper.microsoft.xinput-1.1.0.jar', 'libs/de.ralleytn.plugins.jinput.xinput-1.1.0.jar')
    }

    compileJava.dependsOn extractNativeBundle
}
